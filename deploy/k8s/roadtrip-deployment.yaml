apiVersion: apps/v1
kind: Deployment
metadata:
  name: roadtrip-api
  labels:
    app: roadtrip-api
    version: v1
spec:
  replicas: 4  # Horizontal scaling with 4 replicas
  selector:
    matchLabels:
      app: roadtrip-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1        # Allow 1 extra pod during updates
      maxUnavailable: 1  # Allow 1 pod to be unavailable
  template:
    metadata:
      labels:
        app: roadtrip-api
        version: v1
    spec:
      terminationGracePeriodSeconds: 60  # Grace period for shutdown
      containers:
      - name: roadtrip-api
        image: gcr.io/PROJECT_ID/roadtrip-api:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: PORT
          value: "8080"
        - name: ENVIRONMENT
          value: "production"
        - name: GUNICORN_WORKERS
          value: "4"  # 4 workers per pod
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: roadtrip-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: roadtrip-secrets
              key: redis-url
        resources:
          requests:
            cpu: "1"      # 1 CPU core
            memory: "2Gi"  # 2GB memory
          limits:
            cpu: "2"      # Max 2 CPU cores
            memory: "4Gi"  # Max 4GB memory
        livenessProbe:
          httpGet:
            path: /health/v2/live
            port: 8080
            httpHeaders:
            - name: User-Agent
              value: "Kubernetes-Health-Check"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/v2/ready
            port: 8080
            httpHeaders:
            - name: User-Agent
              value: "Kubernetes-Health-Check"
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              # Graceful shutdown command
              command: ["/bin/sh", "-c", "sleep 15"]
---
apiVersion: v1
kind: Service
metadata:
  name: roadtrip-api
  labels:
    app: roadtrip-api
spec:
  type: LoadBalancer
  selector:
    app: roadtrip-api
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  sessionAffinity: ClientIP  # Sticky sessions for better cache utilization
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hour timeout
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: roadtrip-api-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: roadtrip-api
  minReplicas: 4
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70  # Scale up at 70% CPU
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80  # Scale up at 80% memory
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # Wait 5 minutes before scaling down
      policies:
      - type: Percent
        value: 50  # Scale down max 50% at a time
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60   # Wait 1 minute before scaling up
      policies:
      - type: Percent
        value: 100  # Can double the pods
        periodSeconds: 60
      - type: Pods
        value: 4    # Or add 4 pods at a time
        periodSeconds: 60
      selectPolicy: Max  # Use whichever scales up more
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: roadtrip-api-pdb
spec:
  minAvailable: 2  # Always keep at least 2 pods running
  selector:
    matchLabels:
      app: roadtrip-api