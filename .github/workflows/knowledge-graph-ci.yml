name: Knowledge Graph CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]

jobs:
  kg-analysis:
    name: Knowledge Graph Analysis
    runs-on: ubuntu-latest
    
    services:
      knowledge-graph:
        image: roadtrip-knowledge-graph:latest
        ports:
          - 8000:8000
        options: >-
          --health-cmd "curl -f http://localhost:8000/api/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for better analysis
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install KG CLI
        run: |
          pip install click httpx rich websocket-client
          chmod +x scripts/kg-cli.py
      
      - name: Wait for Knowledge Graph
        run: |
          echo "Waiting for Knowledge Graph to be ready..."
          for i in {1..30}; do
            if curl -f http://localhost:8000/api/health; then
              echo "Knowledge Graph is ready!"
              break
            fi
            echo "Waiting... ($i/30)"
            sleep 2
          done
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files: |
            **/*.py
            **/*.js
            **/*.ts
            **/*.tsx
      
      - name: Analyze file impacts
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "üîç Analyzing impact of changed files..."
          
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "Analyzing: $file"
            python scripts/kg-cli.py impact "$file" || true
          done
      
      - name: Validate changes
        if: steps.changed-files.outputs.any_changed == 'true'
        id: validate
        run: |
          echo "üîç Validating changes..."
          
          # Convert space-separated to array
          files=(${{ steps.changed-files.outputs.all_changed_files }})
          
          # Run validation
          output=$(python scripts/kg-cli.py validate "${files[@]}" 2>&1) || true
          echo "$output"
          
          # Check if validation passed
          if echo "$output" | grep -q "Validation failed"; then
            echo "validation_passed=false" >> $GITHUB_OUTPUT
            echo "‚ùå Knowledge Graph validation failed!"
            
            # Extract severity
            severity=$(echo "$output" | grep -oP 'Severity: \K\w+' | head -1)
            echo "severity=$severity" >> $GITHUB_OUTPUT
          else
            echo "validation_passed=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Knowledge Graph validation passed!"
          fi
      
      - name: Comment PR with analysis
        if: github.event_name == 'pull_request' && steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const validation_passed = '${{ steps.validate.outputs.validation_passed }}' === 'true';
            const severity = '${{ steps.validate.outputs.severity }}' || 'unknown';
            const changed_files = '${{ steps.changed-files.outputs.all_changed_files }}'.split(' ');
            
            let comment = '## üß† Knowledge Graph Analysis\n\n';
            
            if (validation_passed) {
              comment += '‚úÖ **All checks passed!**\n\n';
            } else {
              comment += `‚ùå **Validation failed** (Severity: ${severity})\n\n`;
              comment += '### Issues Found:\n';
              comment += 'Please check the workflow logs for detailed findings.\n\n';
            }
            
            comment += `### Files Analyzed (${changed_files.length}):\n`;
            changed_files.forEach(file => {
              comment += `- \`${file}\`\n`;
            });
            
            comment += '\n### Next Steps:\n';
            if (!validation_passed) {
              comment += '1. Review the issues identified above\n';
              comment += '2. Run `roadtrip-kg analyze <file>` locally for details\n';
              comment += '3. Fix the issues and push again\n';
            } else {
              comment += '- No action required, ready to merge!\n';
            }
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Knowledge Graph Analysis')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
      
      - name: Set status check
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          if [ "${{ steps.validate.outputs.validation_passed }}" = "false" ]; then
            if [ "${{ steps.validate.outputs.severity }}" = "critical" ]; then
              echo "üö® Critical issues found - blocking merge"
              exit 1
            else
              echo "‚ö†Ô∏è Non-critical issues found - merge allowed with caution"
            fi
          fi
      
      - name: Generate impact report
        if: always()
        run: |
          echo "üìä Generating impact report..."
          
          # Get agent status
          python scripts/kg-cli.py status > kg-status.txt || true
          
          # Upload as artifact
          echo "### Knowledge Graph Impact Report" > kg-report.md
          echo "Generated: $(date)" >> kg-report.md
          echo "" >> kg-report.md
          
          if [ -f kg-status.txt ]; then
            echo "#### Agent Status" >> kg-report.md
            echo '```' >> kg-report.md
            cat kg-status.txt >> kg-report.md
            echo '```' >> kg-report.md
          fi
      
      - name: Upload KG report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: knowledge-graph-report
          path: kg-report.md

  kg-patterns:
    name: Pattern Compliance Check
    runs-on: ubuntu-latest
    needs: kg-analysis
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check for pattern violations
        run: |
          echo "üîç Checking code patterns..."
          
          # This would connect to KG and check patterns
          # For now, just a placeholder
          echo "Pattern check would run here"
      
      - name: Suggest improvements
        run: |
          echo "üí° Looking for improvement suggestions..."
          
          # This would use KG to suggest improvements
          echo "Suggestions would appear here"