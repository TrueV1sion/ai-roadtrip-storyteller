# Kubernetes SSL/TLS Configuration with cert-manager

---
# Certificate Issuer for Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@roadtrip.app
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
    - http01:
        ingress:
          class: nginx

---
# Certificate Issuer for Let's Encrypt Staging (Testing)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: admin@roadtrip.app
    privateKeySecretRef:
      name: letsencrypt-staging-key
    solvers:
    - http01:
        ingress:
          class: nginx

---
# Certificate Resource
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: roadtrip-tls
  namespace: roadtrip-prod
spec:
  secretName: roadtrip-tls-secret
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: api.roadtrip.app
  dnsNames:
  - api.roadtrip.app
  - www.api.roadtrip.app

---
# Ingress with SSL/TLS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: roadtrip-ingress
  namespace: roadtrip-prod
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Strict-Transport-Security: max-age=63072000; includeSubDomains; preload";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://maps.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://maps.googleapis.com https://api.spotify.com wss://api.roadtrip.app;";
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "2"
    # Proxy settings
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
spec:
  tls:
  - hosts:
    - api.roadtrip.app
    - www.api.roadtrip.app
    secretName: roadtrip-tls-secret
  rules:
  - host: api.roadtrip.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: roadtrip-api
            port:
              number: 80
  - host: www.api.roadtrip.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: roadtrip-api
            port:
              number: 80

---
# Network Policy for SSL/TLS
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: roadtrip-ssl-policy
  namespace: roadtrip-prod
spec:
  podSelector:
    matchLabels:
      app: roadtrip-api
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000

---
# ConfigMap for SSL settings
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssl-config
  namespace: roadtrip-prod
data:
  # TLS version settings
  min-tls-version: "1.2"
  # Cipher suites
  cipher-suites: |
    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305