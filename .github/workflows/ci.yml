name: CI Pipeline
'on':
  push:
    branches:
    - main
    - develop
  pull_request:
    branches:
    - main
env:
  PYTHON_VERSION: '3.9'
  NODE_VERSION: '18'
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles("requirements.txt") }}
    - name: Install dependencies
      run: 'pip install --upgrade pip

        pip install -r requirements.txt

        pip install -r requirements-dev.txt'
    - name: Run linting
      run: 'black backend/ --check

        flake8 backend/

        mypy backend/'
    - name: Run security scan
      run: 'pip install bandit safety

        bandit -r backend/

        safety check'
    - name: Run tests with coverage
      run: 'pytest --cov=backend/app --cov-report=xml --cov-report=html

        coverage report --fail-under=85'
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
  build-backend:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build Docker image
      run: docker build -t roadtrip-backend:${{ github.sha }} -f Dockerfile .
    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: roadtrip-backend:${{ github.sha }}
        format: sarif
        output: trivy-results.sarif
    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: trivy-results.sarif
  test-mobile:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: npm
        cache-dependency-path: mobile/package-lock.json
    - name: Install dependencies
      working-directory: ./mobile
      run: npm ci
    - name: Run linting
      working-directory: ./mobile
      run: npm run lint
    - name: Run tests
      working-directory: ./mobile
      run: npm test -- --coverage
    - name: Run TypeScript check
      working-directory: ./mobile
      run: npm run typecheck
